{"version":3,"sources":["arnulfo.jpg","components/logo/Logo.js","components/nav-bar/NavBar.js","components/master-head/MasterHead.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","props","state","name","color","this","href","className","style","React","Component","NavBar","id","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","MasterHead","src","profile","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,qC,sLCEtBC,E,YACjB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,KAAOF,EAAME,KAAOF,EAAME,KAAO,uBACjCC,MAAQH,EAAMG,MAAQH,EAAMG,MAAO,QAJzB,E,sEAOT,IAAD,EACkBC,KAAKH,MAApBC,EADH,EACGA,KAAMC,EADT,EACSA,MACb,OACK,uBAAGE,KAAK,YACLC,UAAU,iCACVC,MAAO,CACHJ,MAAOA,IAEbD,O,GAhBoBM,IAAMC,WCCnBC,E,iLAEb,OACI,yBAAKJ,UAAU,gEAAgEK,GAAG,WAC9E,yBAAKL,UAAU,aACX,kBAAC,EAAD,MACA,4BAAQA,UAAU,oGAAoGM,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,qBAA7P,OAEI,uBAAGX,UAAU,iBAEjB,yBAAKA,UAAU,2BAA2BK,GAAG,oBACzC,wBAAIL,UAAU,sBACd,wBAAIA,UAAU,yBACV,uBAAGA,UAAU,uDAAuDD,KAAK,cAAzE,gBAEJ,wBAAIC,UAAU,yBACV,uBAAGA,UAAU,uDAAuDD,KAAK,UAAzE,cAEJ,wBAAIC,UAAU,yBACV,uBAAGA,UAAU,uDAAuDD,KAAK,YAAzE,qB,GAnBQG,IAAMC,W,iBCArBS,E,iLAGb,OACI,4BAAQZ,UAAU,8CACd,yBAAKA,UAAU,mDAEX,yBACIA,UAAU,uBACVa,IAAKC,IACLC,IAAI,KAER,wBAAIf,UAAU,wCAAd,2BAEA,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,uBACf,uBAAGA,UAAU,iBAEb,yBAAKA,UAAU,yBAEnB,uBAAGA,UAAU,8CAAb,4D,GArBoBE,IAAMC,WCU/Ba,MATf,WACE,OACE,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QCIYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.324a2490.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arnulfo.93389495.jpg\";","import React from 'react'\r\n\r\nexport default class Logo extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name : props.name ? props.name : 'Psicólogo Arnulfo',\r\n            color : props.color ? props.color :'#fff'  \r\n        }\r\n    }\r\n    render(){\r\n        const {name, color} = this.state;\r\n        return(\r\n             <a href=\"#page-top\"\r\n                className=\"navbar-brand js-scroll-trigger\"\r\n                style={{\r\n                    color: color\r\n                }}\r\n            >{name}</a>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport Logo from '../logo/Logo'\r\n\r\nexport default class NavBar extends React.Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg bg-secondary text-uppercase fixed-top\" id=\"mainNav\">\r\n                <div className=\"container\">\r\n                    <Logo/>\r\n                    <button className=\"navbar-toggler navbar-toggler-right text-uppercase font-weight-bold bg-primary text-white rounded\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        Menu\r\n                        <i className=\"fas fa-bars\"></i>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item mx-0 mx-lg-1\">\r\n                            <a className=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" href=\"#portfolio\">Consultorio</a>\r\n                        </li>\r\n                        <li className=\"nav-item mx-0 mx-lg-1\">\r\n                            <a className=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" href=\"#about\">Acerca de</a>\r\n                        </li>\r\n                        <li className=\"nav-item mx-0 mx-lg-1\">\r\n                            <a className=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" href=\"#contact\">Contacto</a>\r\n                        </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport profile from '../../arnulfo.jpg'\r\n\r\nexport default class MasterHead extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"masthead bg-primary text-white text-center\">\r\n                <div className=\"container d-flex align-items-center flex-column\">\r\n\r\n                    <img \r\n                        className=\"masthead-avatar mb-5\"\r\n                        src={profile}\r\n                        alt=\"\"\r\n                    />\r\n                    <h1 className=\"masthead-heading text-uppercase mb-0\">Arnulfo Marquez Navarro</h1>\r\n\r\n                    <div className=\"divider-custom divider-light\">\r\n                        <div className=\"divider-custom-line\"></div>\r\n                        <div className=\"divider-custom-icon\">\r\n                        <i className=\"fas fa-star\"></i>\r\n                        </div>\r\n                        <div className=\"divider-custom-line\"></div>\r\n                    </div>\r\n                    <p className=\"masthead-subheading font-weight-light mb-0\">Ansiedad - Depresión - Psicología clínica</p>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport NavBar from './components/nav-bar/NavBar'\nimport MasterHead from './components/master-head/MasterHead'\n\nfunction App() {\n  return (\n    <div>\n        <NavBar/>\n        <MasterHead/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport './freelancer.min.css'\nimport '@fortawesome/react-fontawesome'\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}